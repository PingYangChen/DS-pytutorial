---
title: "SHAP"
format: 
    html:
        html-math-method: mathml
        toc: true
lang: zh-TW
---



```{python}
# 匯入必要的套件
import os  # 用於作業系統相關的操作
from copy import deepcopy
import pandas as pd  # 用於處理和分析資料的資料框架工具
import numpy as np  # 用於數學計算，特別是陣列處理
from matplotlib import pyplot as plt  # 用於繪製圖表
```

```{python}
# 從網路讀取 CSV 檔案並載入至 pandas DataFrame
house_df = pd.read_csv('https://raw.githubusercontent.com/PingYangChen/DS-pytutorial/refs/heads/main/sample_data/Housing.csv')
# 顯示資料集的前 5 行
print(house_df.head(5))
# 計算資料集的總行數
print(len(house_df))
```


```{python}
house_df_dummy = pd.get_dummies(house_df, columns=['mainroad', 'guestroom', 'basement', 'hotwaterheating', 'airconditioning', 'prefarea', 'furnishingstatus'], drop_first=True, dtype=int)
```
```{python}
y = house_df_dummy['price']
x = house_df_dummy[np.setdiff1d(house_df_dummy.columns, ['price']).tolist()]
```

```{python}
#| message: false
import xgboost as xgb
mdl = xgb.XGBRegressor(n_estimators = 20)
mdl.fit(x, y)
```

```{python}
import dalex
```


```{python}
expl = dalex.Explainer(model=mdl, data=x,
                        y=y, model_type='regression')
expl.model_diagnostics()
shap_result = expl.predict_parts(x.iloc[0], type='shap', B=10, random_state=0).result
```

```{python}
shap_df = pd.DataFrame(columns=['name', 'value', 'min', 'q1', 'median', 'q3', 'max', 'mean', 'abs_mean'])
x_vars = np.unique(shap_result['variable_name'])
for j in range(len(x_vars)):
    tmp = deepcopy(shap_result.loc[shap_result['variable_name'] == x_vars[j],])
    scores = tmp.loc[tmp['B'] > 0, 'contribution'].values
    score_sign = 1.0
    if np.all(scores < 0):
        scores = np.abs(scores)
        score_sign = -1.0
    x_value = tmp.loc[tmp['B'] == 0, 'variable_value'].values[0]
    shap_df.loc[j] = [x_vars[j], x_value] + (score_sign * np.quantile(scores, [0., .25, .5, .75, 1.])).tolist() + [score_sign * np.mean(scores),np.mean(scores)]
shap_df.sort_values('abs_mean', ascending=False, inplace=True, ignore_index=True)
shap_df.replace(np.nan, None, inplace=True)
```

```{python}
print(shap_df[['name', 'value', 'mean']])
```



